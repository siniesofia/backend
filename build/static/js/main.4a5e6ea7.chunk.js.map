{"version":3,"sources":["services/people.js","components/PersonForm.js","components/CheckForName.js","components/SuccessNotification.js","components/ErrorNotification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","changedPerson","put","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","CheckForName","people","length","name","i","window","confirm","SuccessNotification","message","className","ErrorNotification","App","useState","setpeople","setNewName","setNewNumber","newFilter","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","peopleervice","initialpeople","replaceNumber","namenumberandid","number","person","find","n","returnedPerson","map","catch","error","setTimeout","event","target","preventDefault","whatToDo","nameObject","concat","addNameAndNumber","deletePerson","personToBeDeleted","filter","personDeleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a5e6ea7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/people'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n    // return axios.post(baseUrl, newObject)\n}\n\nconst deletePerson = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst replaceNumber = (id, changedPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, changedPerson)\n  return request.then(response => response.data)\n  // return axios.put(`${baseUrl}/${id}`, changedPerson)\n}\n\nexport default { getAll, create, deletePerson, replaceNumber\n  }","import React from 'react'\n\nconst PersonForm = ({ addName, newName, newNumber, handleNameChange, handleNumberChange }) => {\n    return (\n      <form onSubmit={addName}>\n        <div>\n          name: <input\n          value={newName}\n          onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input\n          value={newNumber}\n          onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>  \n        </div>\n      </form>\n    )\n  }\n\nexport default PersonForm","const CheckForName = (people, newName) => {\n  const length = people.people.length\n  const name = newName.newName\n  for (let i =0; i < length; i++) {\n    if (people.people[i].name === name) {\n      if (window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`)) {\n        return people.people[i].id\n      } else {\n        return \"dont add anything\"\n      }\n    }\n  }\n  return \"add name and number\"\n}\n\nexport default CheckForName","import React from 'react'\n\nconst SuccessNotification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"success\">\n        {message}\n        </div>\n    )\n    }\n\nexport default SuccessNotification","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n        {message}\n        </div>\n    )\n    }\n\nexport default ErrorNotification","import React, { useState, useEffect } from 'react'\nimport peopleervice from './services/people'\nimport people from './components/people'\nimport PersonForm from './components/PersonForm'\nimport CheckForName from './components/CheckForName'\nimport SuccessNotification from './components/SuccessNotification'\nimport ErrorNotification from './components/ErrorNotification'\n\nconst App = () => {\n  const [ people, setpeople] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    peopleervice\n      .getAll()\n      .then(initialpeople => {\n        setpeople(initialpeople)\n      })\n  }, [])\n  \n  const addNameAndNumber = ( {newName, newNumber }) => {\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n    peopleervice\n      .create(nameObject)\n      .then(returnedPerson => {\n        setpeople(people.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setSuccessMessage(`Added ${nameObject.name}`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n  }\n\n  const dontAddNameAndNumber = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n\n  const addName = (event) => {\n    event.preventDefault()\n    const whatToDo = CheckForName({people}, {newName})\n    if (whatToDo === \"add name and number\") {\n      addNameAndNumber({ newName, newNumber })\n    } else if (whatToDo === \"dont add anything\"){\n      dontAddNameAndNumber()\n    } else {\n      replaceNumber([newName, newNumber, whatToDo])\n    }\n  }\n\n  const deletePerson = (id) => {\n    const personToBeDeleted = people.filter(person => person.id === id)\n    const personDeleted = people.filter(person => person.id !== id)\n    if (window.confirm(`Delete ${personToBeDeleted[0].name}?`)) {\n      peopleervice\n        .deletePerson(id)\n        .then(response => {\n          setpeople(personDeleted)\n          setSuccessMessage(`Deleted ${personToBeDeleted[0].name}`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`Information of ${personToBeDeleted[0].name} has already been removed from server`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })  \n    }\n  }\n\n  const replaceNumber = namenumberandid => {\n    const number = namenumberandid[1]\n    const id = namenumberandid[2]\n    const person = people.find(n => n.id === id)\n    const changedPerson = { ...person, number: number }\n    peopleervice\n      .replaceNumber(id, changedPerson)\n      .then(returnedPerson => {\n        setpeople(people.map(person => person.id !== id ? person : returnedPerson))\n      })\n    .catch(error => {\n      setErrorMessage(`Information of ${person.name} has already been removed from server`)\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 5000)\n    })  \n    setNewName('')\n    setNewNumber('')\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <form>\n        <div >\n          Filter shown with: \n          <input \n          value={newFilter}\n          onChange={handleFilterChange}\n          />\n        </div>\n      </form>\n      <h2>add a new</h2>\n      <PersonForm \n      addName={addName} \n      newName={newName} \n      newNumber={newNumber} \n      handleNameChange={handleNameChange} \n      handleNumberChange={handleNumberChange}>\n      </PersonForm>\n      <h2>Numbers</h2>\n      <people people={people} newFilter={newFilter} deletePerson = {deletePerson}></people>\n    </div>\n)\n}\n\nexport default App\n\n\n// maiden tiedot 2.14 tekemättä\n\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}